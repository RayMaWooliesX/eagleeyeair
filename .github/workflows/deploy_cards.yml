name: deploy cards

on:
  push:
    branches-ignore:
      - "feature/dependencies"
    paths:
      - "src_cards/main.py"
      - "src_cards/loyalty_util.py"
      - "src_cards/requirements.txt"
      - ".github/workflows/deploy_cards.yml"
jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      environ: ${{ steps.setvars.outputs.environ }}
      gprojectid: ${{ steps.setvars.outputs.gprojectid }}
    steps:
      - name: Set variables
        id: setvars
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo '::set-output name=environ::prod'
            echo '::set-output name=gprojectid::gcp-wow-rwds-etl-prod'
          elif [[ ${{ github.ref }} == 'refs/heads/hotfix' ]]; then
            echo '::set-output name=environ::prod'
            echo '::set-output name=gprojectid::gcp-wow-rwds-etl-prod'
          elif [[ ${{ github.ref }} == 'refs/heads/release' ]]; then
            echo '::set-output name=environ::uat'
            echo '::set-output name=gprojectid::gcp-wow-rwds-etl-uat'
          elif [[ ${{ github.ref }} == 'refs/heads/integrate' ]]; then
            echo '::set-output name=environ::test'
            echo '::set-output name=gprojectid::gcp-wow-rwds-etl-test'
          elif [[ ${{ github.ref }} == 'refs/heads/develop' ]]; then
            echo '::set-output name=environ::dev'
            echo '::set-output name=gprojectid::gcp-wow-rwds-etl-dev'
          elif [[ ${{ github.ref }} == 'refs/heads/feature/poc' ]]; then
            echo '::set-output name=environ::poc'
            echo '::set-output name=gprojectid::gcp-wow-rwds-etl-poc-dev'
          else
            echo '::set-output name=environ::null'
          fi
  test_build_and_deploy:
    runs-on: ubuntu-latest
    needs: init
    if: ${{ needs.init.outputs.environ  != 'null'}}
    environment:
      name: ${{ needs.init.outputs.environ }}
    env:
      gprojectid: ${{ needs.init.outputs.gprojectid }}
      VAULT_ADDR: https://vault.${{ needs.init.outputs.environ }}.gcp.api-wr.com:8200
      gcf_name: wx-p24-loyalty-api-cards-ee-gcf
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Display environment
        run: echo 'environment:' ${{ needs.init.outputs.environ }}
      - name: Get secrets from Vault
        id: vault
        uses: hashicorp/vault-action@v2.1.2
        with:
          url: ${{ env.VAULT_ADDR }}
          token: ${{ secrets.VAULT_TOKEN }}
          tlsSkipVerify: true
          caCertificate: ${{ secrets.VAULT_CA }}
          secrets: |
            kv/data/${{ env.gprojectid }}/GOOGLE_CREDENTIALS GOOGLE_CREDENTIALS ;
            kv/data/apps/wx-rtl-loyalty-api/credentials user | EES_AUTH_CLIENT_ID ;
            kv/data/apps/wx-rtl-loyalty-api/credentials password | EES_AUTH_CLIENT_SECRET ;
            kv/data/apps/wx-rtl-loyalty-api/urls EES_API_PREFIX | EES_API_PREFIX ;
            kv/data/apps/wx-rtl-loyalty-api/urls EES_POS_API_HOST | EES_POS_API_HOST ;
            kv/data/apps/wx-rtl-loyalty-api/urls EES_RESOURCES_API_HOST | EES_RESOURCES_API_HOST ;
            kv/data/apps/wx-rtl-loyalty-api/urls EES_WALLET_API_HOST | EES_WALLET_API_HOST ;
            kv/data/apps/wx-rtl-loyalty-api/mongo_api_logging URL | MONGO_API_LOGGING_URL ;
            kv/data/apps/wx-rtl-loyalty-api/mongo_api_logging CLIENT_ID | MONGO_API_LOGGING_CLIENT_ID ;
      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ env.gprojectid }}
          service_account_key: ${{ steps.vault.outputs.GOOGLE_CREDENTIALS }}
      - name: Deploy Function
        run: >-
          gcloud functions deploy ${{ env.gcf_name }} 
          --region=australia-southeast1
          --memory=256MB
          --runtime=python38
          --trigger-http 
          --source=src_cards/
          --entry-point=main_cards
          --min-instances=2
          --max-instances=20
          --ingress-settings=all
          --set-env-vars EES_AUTH_CLIENT_ID=${{ steps.vault.outputs.EES_AUTH_CLIENT_ID }}
          --set-env-vars EES_AUTH_CLIENT_SECRET=${{ steps.vault.outputs.EES_AUTH_CLIENT_SECRET }}
          --set-env-vars EES_API_PREFIX=${{ steps.vault.outputs.EES_API_PREFIX }}
          --set-env-vars EES_POS_API_HOST=${{ steps.vault.outputs.EES_POS_API_HOST }}
          --set-env-vars EES_RESOURCES_API_HOST=${{ steps.vault.outputs.EES_RESOURCES_API_HOST }}
          --set-env-vars EES_WALLET_API_HOST=${{ steps.vault.outputs.EES_WALLET_API_HOST }}
          --set-env-vars MONGO_API_LOGGING_URL=${{ steps.vault.outputs.MONGO_API_LOGGING_URL }}
          --set-env-vars MONGO_API_LOGGING_CLIENT_ID=${{ steps.vault.outputs.MONGO_API_LOGGING_CLIENT_ID }}
          --service-account=p24worker@${{ env.gprojectid }}.iam.gserviceaccount.com
